name: Build and Deploy to Clean Branch

on:
  workflow_call:
    inputs:
      files:
        description: "List of files/directories to copy (space-separated)"
        required: false
        default: "dist package.json"
        type: string
      branch:
        description: "Target branch"
        required: false
        default: "dist"
        type: string
      customCommands:
        description: "Run custom commands"
        required: false
        type: string
      publishToNpm:
        description: "Publish the package to npm (optional)"
        required: false
        default: false
        type: boolean
      scriptsHandling:
        description: |
          Control how scripts in package.json are handled:
          - `retain-all`: Retain all scripts.
          - `remove-all`: Remove all scripts.
          - `keep-start`: Keep only the "start" script (if it exists); remove all others.
          - `custom-list`: Provide a custom list of scripts to retain.
        required: false
        default: "keep-start"
        type: string
      customScripts:
        description: "Comma-separated list of scripts to retain (used with `scriptsHandling: custom-list`)"
        required: false
        type: string

    secrets:
      NPM_TOKEN:
        required: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
          registry-url: https://registry.npmjs.org/

      - name: Install Dependencies
        run: npm i

      - name: Install TypeScript & tsc-alias globally
        run: npm install -g typescript tsc-alias

      - name: Build Project
        run: npm run build

      - name: Run Custom Commands
        if: ${{ inputs.customCommands }}
        run: |
          eval ${{ inputs.customCommands }}

      - name: Modify scripts in package.json
        if: ${{ inputs.scriptsHandling != 'retain-all' }}
        run: |
          HANDLING=${{ inputs.scriptsHandling }}
          CUSTOM_SCRIPTS=${{ inputs.customScripts }}

          # Case 1: Remove all scripts
          if [ "$HANDLING" == "remove-all" ]; then
            jq 'del(.scripts)' package.json > package.json.tmp

          # Case 2: Keep only the "start" script
          elif [ "$HANDLING" == "keep-start" ]; then
            jq '
              if .scripts then
                .scripts |= {start: .start}
              else
                .
              end
            ' package.json > package.json.tmp

          # Case 3: Retain a custom list of scripts
          elif [ "$HANDLING" == "custom-list" ]; then
            IFS=',' read -r -a SCRIPTS <<< "$CUSTOM_SCRIPTS"
            jq --argjson scripts "$(jq -n '$ARGS.positional' --args "${SCRIPTS[@]}")" '
              if .scripts then
                .scripts |= with_entries(select(.key as $k | $scripts | index($k)))
              else
                .
              end
            ' package.json > package.json.tmp

          # Default case: Retain all scripts (do nothing)
          else
            cp package.json package.json.tmp
          fi

          # Replace the original package.json with the modified version
          mv package.json.tmp package.json

      - name: Prepare and Push to Target Branch
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          git checkout --orphan ${{ inputs.branch }}

          git reset -q HEAD --
          FILES=$(echo "${{ inputs.files }}" | tr '\n' ' ')
          git add -f -A $FILES

          # Commit and force push
          git commit -m "Deploy to ${{ inputs.branch }}"
          git push origin ${{ inputs.branch }} --force

      - name: Publish to npm
        if: ${{ inputs.publishToNpm && startsWith(github.ref, 'refs/tags/') }}
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}